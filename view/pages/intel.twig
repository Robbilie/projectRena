<div class="contentConti" id="intelConti">
	<div id="intelNav" class="navigation">
		<div id="systemNav" class="half"><a onclick="click(this);" href="#!/intel/system/">System</a></div><div id="regionNav" class="half"><a onclick="click(this);" href="#!/intel/region/">Region</a></div>
	</div>
	<div id="intelContent" class="undernav">
		<div id="intelSystem" class="hide">
            <h1 id="intelStatus" class="intelText mbn">[Offline]</h1>
            <h3 id="intelLocation" class="intelText mtn"></h3>
			<div id="intelWarnings"></div>
			<div id="intelMemberlist"></div>
		</div>
		<div id="intelRegion" class="hide"></div>
	</div>
	<div style="display: none;">
        <div id="charTemplate">
            <div class="hover row {2}"><img src="https://image.eveonline.com/Character/{0}_32.jpg" alt="{1}"/><a href="#!/profile/{0}/" onclick="click(this);">{1}</a></div>
        </div>
	</div>
</div>
<div id="intelSettings">
	<img src="./img/icons/Settings.png" alt="Settings"/>
	<div id="intelForm" class="">
		<h5 class="smt mbn">System</h5>
		<input type="text" id="intelSystemName" class="mtn"/>
		<h5 class="smt mbn">Paste</h5>
		<textarea id="intelPasteArea" class="mtn" onpaste="paste(event);"></textarea>
	</div>
</div>
<label id="maxBtn" for="checkMaxed">+</label>
<script type="text/javascript">
	intelJS();
	function intelJS () {
		if(location.hash.split("/")[2] == "") {
			var t = $("#systemNav").children[0];
			location.hash = t.getAttribute("href");
			click(t);
		} else {
			$("#" + location.hash.split("/")[2] + "Nav").className.replace(" selected", "");
			$("#" + location.hash.split("/")[2] + "Nav").className += " selected";
			var fn = "intel" + location.hash.split("/")[2] + "JS";
			if(typeof window[fn] === "function")
				window[fn](function () {
					fadeOn($("#intelConti"), 1);
				});
		}
	}

	var checkInt;

	function intelsystemJS (cb) {
		$("#intelSystem").className = "";
		checkInt = setInterval(checkSystemStatus, 2000);
		cb();
	}

	function intelregionJS (cb) {
		$("#intelRegion").className = "";
		checkInt = setInterval(checkRegionStatus, 2000);
		cb();
	}

    var systemStatus = {};
	function checkSystemStatus () {
		if(location.hash.split("/")[1] != "intel") {
			clearInterval(checkInt);
			return;
		}
		ajax("/json/intel/system/" + (location.hash.split("/")[3] != "" ? location.hash.split("/")[3] : ""), function (r) {
			if(JSON.stringify(systemStatus) != JSON.stringify(r)) {
                systemStatus = r;

                $("#intelConti").className = "contentConti intelStatus" + systemStatus;

                $("#intelStatus").innerHTML = "[" + systemStatus.status + "]";
                $("#intelLocation").innerHTML = systemStatus.regionName + " - " + systemStatus.systemName;

                var tmpl = $("#charTemplate").innerHTML;
                var el = $("#intelMemberlist");
                el.innerHTML = "";
                for(var i = 0; i < systemStatus.members.length; i++)
                    el.innerHTML += tmpl.format(systemStatus.members[i].characterID, systemStatus.members[i].characterName, systemStatus.members[i].standing + "Standing");

            }
		}, "json");
	}

	function checkRegionStatus () {
		if(location.hash.split("/")[1] != "intel") {
			clearInterval(checkInt);
			return;
		}
		ajax("/json/intel/region/" + (location.hash.split("/")[3] != "" ? location.hash.split("/")[3] : ""), function (r) {
			console.log(r);
		}, "json");
	}

	var submitting = false;
	function paste (e) {
		console.log("Pasted");
		if (e.preventDefault) {
			e.stopPropagation();
			e.preventDefault();
		}
		if(submitting) return false;
		submitting = true;
		var dat = e.clipboardData.getData('text/plain');
		dat = dat.split("\n");
		submitIntel(dat);
	}

    var intelSystemID;
	function submitIntel (dat) {
		var req = new XMLHttpRequest();
		req.onreadystatechange = function () {
			if(req.readyState == 4 && req.status == 200) {
				alert("Submitted");
				submitting = false;
			}
		};
		req.open("POST", "/json/intel/system/" + (!intelSystemID ? "" : intelSystemID + "/"), true);
		req.setRequestHeader("Content-type","application/x-www-form-urlencoded");
		req.send(encodeURI("local=" + dat.join(",")));
	}
</script>